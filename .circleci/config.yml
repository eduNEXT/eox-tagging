# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2.1
workflows:
  version: 2.1
  test:
    jobs:
      - test:
          filters:
            tags:
              only: /v?[0-9]+(\.[0-9]+)*/
          matrix:
            parameters:
              python_version: ["2.7", "3.5"]
              django_version: ["django111"]
      - pypi:
          requires:
            - test
          filters:
            tags:
              only: /v?[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

jobs:
  test:
    parameters:
      django_version:
        type: string
      python_version:
        type: string
      debian_version:
        type: string
        default: stretch
    docker:
      # specify the version you desire here
      - image: circleci/python:<< parameters.python_version >>-<< parameters.debian_version >>
    working_directory: ~/repo<< parameters.python_version >>

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - test-tox-py<< parameters.python_version >>-<< parameters.django_version >>-{{ checksum "requirements/test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - test-tox-py<< parameters.python_version >>-<< parameters.django_version >>-

      - run:
          name: activate virtualenv and install dependencies.
          command: |
            virtualenv ./venv
            . venv/bin/activate
            pip install -r requirements/tox.txt

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            export TOXENV=${TOX_ENV//./}
            make run-test

      - run:
          name: Quality tests
          command: |
            . venv/bin/activate
            export TOXENV=${TOX_ENV//./}
            make run-quality-test

      - save_cache:
          paths:
            - ./.tox
          key: test-tox-py<< parameters.python_version >>-<< parameters.django_version >>-{{ checksum "requirements/test.txt" }}

    environment:
      - TOX_ENV: py<< parameters.python_version >>-<< parameters.django_version >>


  pypi:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run:
          name: Init .pypirc
          command: |
            echo $'[distutils]\nindex-servers = pypi\n[pypi]' > ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: Prepare venv for distribution
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install twine
      - run:
          name: Create package
          command: |
            python setup.py sdist bdist_wheel
      - run:
          name: Check package
          command: |
            source venv/bin/activate
            twine check dist/*
      - run:
          name: Upload to pypi
          command: |
            source venv/bin/activate
            twine upload dist/*
